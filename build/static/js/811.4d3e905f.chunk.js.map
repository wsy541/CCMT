{"version":3,"file":"static/js/811.4d3e905f.chunk.js","mappings":"gMAIMA,EAAW,SAAAC,GAIf,OAHe,IAAIC,MAAM,IAAIC,KAAK,GAAGC,KAAI,iBAAO,CAC9CC,EAAGC,IAAAA,OAAAA,QAAoB,GAAI,SAEfF,KAAI,SAACG,EAAMC,GAAP,eAAC,UAAsBD,GAAvB,IAChBE,EAAGD,EACHP,KAAAA,SAWJS,EAAAA,EAAAA,GAAU,CACRC,MAAO,WACLL,IAAAA,KAAU,IAAIM,OAAO,gCAAgC,SAAAC,GACnD,IACEC,EACEC,EAAAA,SAAYF,EAAOG,KAAKC,MAD1BH,KAEF,OAAOR,IAAAA,KAAU,CACfY,MAAO,kBAAMZ,IAAAA,OAAAA,QAAoB,IAAM,MACvCa,UAAW,kBAAMb,IAAAA,OAAAA,WACjBc,KAAM,kBAAMd,IAAAA,OAAAA,QAAoB,IAAK,MACrCe,UAAWP,EACXQ,UAAW,WACT,MAAa,QAATR,EAlBL,IAAIZ,MAAM,GAAGC,KAAK,GAAGC,KAAI,SAACmB,EAAGf,GAAJ,MAAe,CAC7CP,KAAM,CAAC,qBAAO,qBAAO,sBAAOO,GAC5BU,MAAOZ,IAAAA,OAAAA,QAAoB,GAAI,SAkBL,SAATQ,EACH,GAAN,eAAWd,EAAS,mBAApB,OAA+BA,EAAS,mBAGnCA,EAAS,uBAKtB,IAAMwB,EAAc,SAAAvB,GAClB,IAAMwB,EAAU,IAAIvB,MAAM,IAAIC,KAAK,GAAGC,KAAI,SAACmB,EAAGf,GAC5C,IAAMkB,EAAe,EAARlB,EACb,OAAOkB,EAAO,EAAP,WAAeA,EAAf,iBAA8BA,EAA9B,UAET,OAAO,IAAIxB,MAAM,IAAIC,KAAK,GAAGC,KAAI,SAACmB,EAAGf,GAAJ,MAAe,CAC9CP,KAAAA,EACAyB,KAAMD,EAAQjB,GACdU,MAAOZ,IAAAA,OAAAA,QAAoB,IAAM,KACjCqB,KAAMrB,IAAAA,OAAAA,QAAoB,EAAG,UAIjCA,IAAAA,KAAU,IAAIM,OAAO,0CAA0C,WAC7D,MAAM,GAAN,eAAWY,EAAY,wBAAvB,OAAkCA,EAAY,wBAA9C,OAAyDA,EAAY,2BAEvElB,IAAAA,KAAU,IAAIM,OAAO,mCAAmC,WACtD,OAAON,IAAAA,KAAU,CACf,SAAU,CAAC,CACT,QAAS,EACTsB,OAAQ,kBAAMtB,IAAAA,OAAAA,KAAiB,CAAC,6CAAW,qBAAO,cAAe,uCAAU,iCAAS,oCACpFoB,KAAM,WACJ,OAAO,IAAIxB,MAAM,IAAIC,KAAK,GAAGC,KAAI,SAACmB,EAAGf,GACnC,IAAMkB,EAAe,EAARlB,EACb,OAAOkB,EAAO,EAAP,WAAeA,EAAf,iBAA8BA,EAA9B,UACNG,KAAKC,GAAK,KAEfC,aAAc,kBAAMzB,IAAAA,OAAAA,QAAoB,IAAM,MAC9C0B,WAAY,kBAAM1B,IAAAA,OAAAA,QAAoB,IAAM","sources":["pages/visualization/data-analysis/mock/index.ts"],"sourcesContent":["import Mock from 'mockjs';\nimport qs from 'query-string';\nimport setupMock from '@/utils/setupMock';\n\nconst mockLine = name => {\n  const result = new Array(12).fill(0).map(() => ({\n    y: Mock.Random.natural(20, 100)\n  }));\n  return result.map((item, index) => ({ ...item,\n    x: index,\n    name\n  }));\n};\n\nconst mockPie = () => {\n  return new Array(3).fill(0).map((_, index) => ({\n    name: ['纯文本', '图文类', '视频类'][index],\n    count: Mock.Random.natural(20, 100)\n  }));\n};\n\nsetupMock({\n  setup: () => {\n    Mock.mock(new RegExp('/api/data-analysis/overview'), params => {\n      const {\n        type\n      } = qs.parseUrl(params.url).query;\n      return Mock.mock({\n        count: () => Mock.Random.natural(1000, 10000),\n        increment: () => Mock.Random.boolean(),\n        diff: () => Mock.Random.natural(100, 1000),\n        chartType: type,\n        chartData: () => {\n          if (type === 'pie') {\n            return mockPie();\n          } else if (type === 'line') {\n            return [...mockLine('类目1'), ...mockLine('类目2')];\n          }\n\n          return mockLine('类目1');\n        }\n      });\n    });\n\n    const getTimeLine = name => {\n      const timeArr = new Array(12).fill(0).map((_, index) => {\n        const time = index * 2;\n        return time < 9 ? `0${time}:00` : `${time}:00`;\n      });\n      return new Array(12).fill(0).map((_, index) => ({\n        name,\n        time: timeArr[index],\n        count: Mock.Random.natural(1000, 5000),\n        rate: Mock.Random.natural(0, 100)\n      }));\n    };\n\n    Mock.mock(new RegExp('/api/data-analysis/content-publishing'), () => {\n      return [...getTimeLine('纯文本'), ...getTimeLine('视频类'), ...getTimeLine('图文类')];\n    });\n    Mock.mock(new RegExp('/api/data-analysis/author-list'), () => {\n      return Mock.mock({\n        'list|8': [{\n          'id|+1': 1,\n          author: () => Mock.Random.pick(['用魔法打败魔法', '王多鱼', 'Christopher', '叫我小李好了', '陈皮话梅糖', '碳烤小肥羊']),\n          time: function () {\n            return new Array(12).fill(0).map((_, index) => {\n              const time = index * 2;\n              return time < 9 ? `0${time}:00` : `${time}:00`;\n            })[this.id % 12];\n          },\n          contentCount: () => Mock.Random.natural(1000, 5000),\n          clickCount: () => Mock.Random.natural(5000, 30000)\n        }]\n      });\n    });\n  }\n});"],"names":["mockLine","name","Array","fill","map","y","Mock","item","index","x","setupMock","setup","RegExp","params","type","qs","url","query","count","increment","diff","chartType","chartData","_","getTimeLine","timeArr","time","rate","author","this","id","contentCount","clickCount"],"sourceRoot":""}