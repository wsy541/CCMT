{"version":3,"file":"static/js/706.cfcfff83.chunk.js","mappings":"sLAGMA,EAAkB,CAAC,qBAAO,qBAAO,sBACjCC,EAAc,CAAC,2BAAQ,2BAAQ,2BAAQ,4BACvCC,EAAc,CAAC,2BAAQ,2BAAQ,2BAAQ,uCAAU,4BACjDC,EAAsB,CAAC,gQAA+C,2QAAgD,qSAAsD,gTAAuD,gNACnOC,EAAY,CAAC,uCAAU,uCAAU,uCAAU,uCAAU,0DACrDC,EAAmB,CAAC,+OAA6C,6LAAmC,2KAAgC,8IAA4B,wOAqDtKC,EAAAA,EAAAA,GAAU,CACRC,MAAO,WACLC,IAAAA,KAAU,IAAIC,OAAO,kBAAkB,WACrC,MAAO,CACLC,QApDFF,IAAAA,KAAU,CACZ,UAAW,CAAC,CACVG,MAAO,2BAASH,IAAAA,OAAAA,KAAiBR,GAA1B,YAA8CQ,IAAAA,OAAAA,KAAiBP,KACtEW,KAAM,kBAAMC,GAAAA,GAAQC,SAASN,IAAAA,OAAAA,QAAoB,EAAG,IAAK,QAAQO,OAAO,wBACxEC,aAAc,kBAAMR,IAAAA,OAAAA,QAAoB,IAAK,MAC7CS,YAAa,kBAAMT,IAAAA,OAAAA,QAAoB,EAAG,MAC1CU,SAAU,kBAAMV,IAAAA,OAAAA,QAAoB,EAAG,UAPzCW,KAsDIC,QAtCFZ,IAAAA,KAAU,CACZ,UAAW,CAAC,CACVa,KAAM,kBAAMb,IAAAA,OAAAA,QAAoB,EAAGN,EAAYoB,OAAS,IACxDX,MAAO,WACL,OAAOT,EAAYqB,KAAKF,OAE1BG,YAAa,WACX,OAAOrB,EAAoBoB,KAAKF,OAElCI,OAAQ,kBAAMjB,IAAAA,OAAAA,QAAoB,EAAG,QAVvCW,KAwCIO,MArBFlB,IAAAA,KAAU,CACZ,UAAW,CAAC,CACVmB,MAAO,kBAAMnB,IAAAA,OAAAA,QAAoB,EAAGJ,EAAUkB,OAAS,IACvDX,MAAO,WACL,OAAOP,EAAUmB,KAAKI,QAExBH,YAAa,WACX,OAAOnB,EAAiBkB,KAAKI,QAE/BF,OAAQ,kBAAMjB,IAAAA,OAAAA,QAAoB,EAAG,QAVvCW","sources":["pages/list/card/mock/index.ts"],"sourcesContent":["import Mock from 'mockjs';\nimport dayjs from 'dayjs';\nimport setupMock from '@/utils/setupMock';\nconst qualityCategory = ['视频类', '图文类', '纯文本'];\nconst qualityName = ['历史导入', '内容版权', '敏感内容', '商业品牌'];\nconst serviceName = ['漏斗分析', '用户分布', '资源分发', '用户画像分析', '事件分析'];\nconst serviceDescriptions = ['用户行为分析之漏斗分析模型是企业实现精细化运营、进行用户行为分析的重要数据分析模型。 ', '快速诊断用户人群，地域细分情况，了解数据分布的集中度，以及主要的数据分布的区间段是什么。', '移动端动态化资源分发解决方案。提供稳定大流量服务支持、灵活定制的分发圈选规则，通过离线化预加载。  ', '用户画像就是将典型用户信息标签化，根据用户特征、业务场景和用户行为等信息，构建一个标签化的用户模型。 ', '事件分析即可进行筛选、分组、聚合的灵活多维数据分析。详情请点击卡片。'];\nconst rulesName = ['内容屏蔽规则', '内容置顶规则', '内容加权规则', '内容分发规则', '多语言文字符号识别'];\nconst rulesDescription = ['用户在执行特定的内容分发任务时，可使用内容屏蔽规则根据特定标签，过滤内容集合。  ', '该规则支持用户在执行特定内容分发任务时，对固定的几条内容置顶。', '选定内容加权规则后可自定义从不同内容集合获取内容的概率。', '内容分发时，对某些内容需要固定在C端展示的位置。', '精准识别英语、维语、藏语、蒙古语、朝鲜语等多种语言以及emoji表情形态的语义识别。'];\n\nconst getQualityCard = () => {\n  const {\n    list\n  } = Mock.mock({\n    'list|10': [{\n      title: () => `${Mock.Random.pick(qualityCategory)}-${Mock.Random.pick(qualityName)}`,\n      time: () => dayjs().subtract(Mock.Random.natural(0, 30), 'days').format('YYYY-MM-DD HH:mm:ss'),\n      qualityCount: () => Mock.Random.natural(100, 500),\n      randomCount: () => Mock.Random.natural(0, 100),\n      duration: () => Mock.Random.natural(0, 200)\n    }]\n  });\n  return list;\n};\n\nconst getServiceCard = () => {\n  const {\n    list\n  } = Mock.mock({\n    'list|10': [{\n      icon: () => Mock.Random.natural(0, serviceName.length - 1),\n      title: function () {\n        return serviceName[this.icon];\n      },\n      description: function () {\n        return serviceDescriptions[this.icon];\n      },\n      status: () => Mock.Random.natural(0, 2)\n    }]\n  });\n  return list;\n};\n\nconst getRulesCard = () => {\n  const {\n    list\n  } = Mock.mock({\n    'list|10': [{\n      index: () => Mock.Random.natural(0, rulesName.length - 1),\n      title: function () {\n        return rulesName[this.index];\n      },\n      description: function () {\n        return rulesDescription[this.index];\n      },\n      status: () => Mock.Random.natural(0, 1)\n    }]\n  });\n  return list;\n};\n\nsetupMock({\n  setup: () => {\n    Mock.mock(new RegExp('/api/cardList'), () => {\n      return {\n        quality: getQualityCard(),\n        service: getServiceCard(),\n        rules: getRulesCard()\n      };\n    });\n  }\n});"],"names":["qualityCategory","qualityName","serviceName","serviceDescriptions","rulesName","rulesDescription","setupMock","setup","Mock","RegExp","quality","title","time","dayjs","subtract","format","qualityCount","randomCount","duration","list","service","icon","length","this","description","status","rules","index"],"sourceRoot":""}